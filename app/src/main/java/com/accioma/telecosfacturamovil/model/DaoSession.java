package com.accioma.telecosfacturamovil.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.accioma.telecosfacturamovil.model.Customer;
import com.accioma.telecosfacturamovil.model.Product;
import com.accioma.telecosfacturamovil.model.Authorization;
import com.accioma.telecosfacturamovil.model.Invoice;
import com.accioma.telecosfacturamovil.model.InvoiceLine;

import com.accioma.telecosfacturamovil.model.CustomerDao;
import com.accioma.telecosfacturamovil.model.ProductDao;
import com.accioma.telecosfacturamovil.model.AuthorizationDao;
import com.accioma.telecosfacturamovil.model.InvoiceDao;
import com.accioma.telecosfacturamovil.model.InvoiceLineDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig customerDaoConfig;
    private final DaoConfig productDaoConfig;
    private final DaoConfig authorizationDaoConfig;
    private final DaoConfig invoiceDaoConfig;
    private final DaoConfig invoiceLineDaoConfig;

    private final CustomerDao customerDao;
    private final ProductDao productDao;
    private final AuthorizationDao authorizationDao;
    private final InvoiceDao invoiceDao;
    private final InvoiceLineDao invoiceLineDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        productDaoConfig = daoConfigMap.get(ProductDao.class).clone();
        productDaoConfig.initIdentityScope(type);

        authorizationDaoConfig = daoConfigMap.get(AuthorizationDao.class).clone();
        authorizationDaoConfig.initIdentityScope(type);

        invoiceDaoConfig = daoConfigMap.get(InvoiceDao.class).clone();
        invoiceDaoConfig.initIdentityScope(type);

        invoiceLineDaoConfig = daoConfigMap.get(InvoiceLineDao.class).clone();
        invoiceLineDaoConfig.initIdentityScope(type);

        customerDao = new CustomerDao(customerDaoConfig, this);
        productDao = new ProductDao(productDaoConfig, this);
        authorizationDao = new AuthorizationDao(authorizationDaoConfig, this);
        invoiceDao = new InvoiceDao(invoiceDaoConfig, this);
        invoiceLineDao = new InvoiceLineDao(invoiceLineDaoConfig, this);

        registerDao(Customer.class, customerDao);
        registerDao(Product.class, productDao);
        registerDao(Authorization.class, authorizationDao);
        registerDao(Invoice.class, invoiceDao);
        registerDao(InvoiceLine.class, invoiceLineDao);
    }
    
    public void clear() {
        customerDaoConfig.getIdentityScope().clear();
        productDaoConfig.getIdentityScope().clear();
        authorizationDaoConfig.getIdentityScope().clear();
        invoiceDaoConfig.getIdentityScope().clear();
        invoiceLineDaoConfig.getIdentityScope().clear();
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public ProductDao getProductDao() {
        return productDao;
    }

    public AuthorizationDao getAuthorizationDao() {
        return authorizationDao;
    }

    public InvoiceDao getInvoiceDao() {
        return invoiceDao;
    }

    public InvoiceLineDao getInvoiceLineDao() {
        return invoiceLineDao;
    }

}
